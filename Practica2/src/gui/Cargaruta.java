/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import clases.*;
import com.sun.tools.javac.Main;
import hilos.movimiento;
import main.Main.*;
import java.awt.Color;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.Serializable;
import java.time.LocalDateTime;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static main.Main.eliminarruta;
import static main.Main.listarutas;
import static main.Main.rutaelegidalist;

/**
 *
 * @author Heraldo
 */
public class Cargaruta extends javax.swing.JFrame implements Serializable{
    
    private String moto1= "Motocicleta 1";
    private String moto2= "Motocicleta 2";
    private String moto3= "Motocicleta 3";

    
    private String estandar1= "Vehiculo estandar 1";
    private String estandar2= "Vehiculo estandar 2";
    private String estandar3= "Vehiculo estandar 3";


    private String premium1= "vehiculo premium 1";
    private String premium2= "vehiculo premium 2";
    private String premium3= "vehiculo premium 3";
    
    

 
    
    /**
     * Creates new form NewJFrame
     */
    public Cargaruta() {
        initComponents();
        
        //AQUI PONES CARACTERISTICAS
        this.getContentPane().setBackground(new Color(174, 214, 241));
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        nombre1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inicio1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        final1 = new javax.swing.JLabel();
        nombre2 = new javax.swing.JLabel();
        inicio2 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        final2 = new javax.swing.JLabel();
        final3 = new javax.swing.JLabel();
        nombre3 = new javax.swing.JLabel();
        inicio3 = new javax.swing.JLabel();
        vehi3 = new javax.swing.JLabel();
        vehi1 = new javax.swing.JLabel();
        vehi2 = new javax.swing.JLabel();
        iniciar2 = new javax.swing.JButton();
        iniciartodos = new javax.swing.JButton();
        iniciar1 = new javax.swing.JButton();
        iniciar3 = new javax.swing.JButton();
        recargar1 = new javax.swing.JButton();
        recargar2 = new javax.swing.JButton();
        recargar3 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablafinal = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin");
        setBackground(java.awt.Color.cyan);
        setBounds(new java.awt.Rectangle(50, 100, 1, 1));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusCycleRoot(false);
        setFont(new java.awt.Font("Lucida Sans", 0, 10)); // NOI18N
        setResizable(false);

        jTabbedPane1.setBackground(new java.awt.Color(157, 198, 255));
        jTabbedPane1.setForeground(new java.awt.Color(51, 51, 51));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(208, 228, 255));

        jButton1.setText("Carga de Rutas (.csv)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar distancia");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoscrolls(false);
        jTable1.setEnabled(false);
        jTable1.setName(""); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jButton4.setText("actualizar y serializar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 370, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Carga de Rutas", jPanel1);

        jPanel2.setBackground(new java.awt.Color(208, 228, 255));

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccionar tipo de transporte:");

        jLabel2.setText("Seleccionar punto inicial:");

        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Seleccionar punto final:");

        jButton3.setText("Generar Viaje");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("actualizar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(314, 314, 314))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(195, 195, 195))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(138, 138, 138))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButton5)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Generar Viaje", jPanel2);

        jPanel3.setBackground(new java.awt.Color(208, 228, 255));
        jPanel3.setEnabled(false);
        jPanel3.setFocusable(false);

        nombre1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nombre1.setText("NOMBRE  1 NO DEFINIDO");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel5.setText("DISTANCIA 1 NO DEFINIDA");
        jLabel5.setToolTipText("");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("DISTANCIA 2 NO DEFINIDA");
        jLabel6.setToolTipText("");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("DISTANCIA 3 NO DEFINIDA");
        jLabel7.setToolTipText("");

        inicio1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        inicio1.setText("INICIO 1 NO DEFINIDO");
        inicio1.setToolTipText("");

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        final1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        final1.setText("FINAL 1 NO DEFINIDO");
        final1.setToolTipText("");

        nombre2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nombre2.setText("NOMBRE  2 NO DEFINIDO");

        inicio2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        inicio2.setText("INICIO 2 NO DEFINIDO");
        inicio2.setToolTipText("");

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 487, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        final2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        final2.setText("FINAL 2 NO DEFINIDO");
        final2.setToolTipText("");

        final3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        final3.setText("FINAL 3 NO DEFINIDO");
        final3.setToolTipText("");

        nombre3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        nombre3.setText("NOMBRE  3 NO DEFINIDO");

        inicio3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        inicio3.setText("INICIO 3 NO DEFINIDO");
        inicio3.setToolTipText("");

        iniciar2.setText("iniciar");
        iniciar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciar2ActionPerformed(evt);
            }
        });

        iniciartodos.setText("Iniciar todos");
        iniciartodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciartodosActionPerformed(evt);
            }
        });

        iniciar1.setText("iniciar");
        iniciar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciar1ActionPerformed(evt);
            }
        });

        iniciar3.setText("iniciar");
        iniciar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciar3ActionPerformed(evt);
            }
        });

        recargar1.setText("Recargar");
        recargar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recargar1ActionPerformed(evt);
            }
        });

        recargar2.setText("Recargar");
        recargar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recargar2ActionPerformed(evt);
            }
        });

        recargar3.setText("Recargar");
        recargar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recargar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(nombre3)
                                        .addGap(12, 12, 12))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(inicio3)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(vehi3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(recargar3))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                        .addComponent(final3))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inicio2)
                                    .addComponent(nombre2)
                                    .addComponent(jLabel6))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(iniciar3, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(iniciartodos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(iniciar2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(recargar2, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(49, 49, 49))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(vehi2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addComponent(final2))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inicio1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vehi1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(recargar1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(iniciar1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(final1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(nombre1))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(nombre1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inicio1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(iniciartodos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(iniciar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(recargar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(final1))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(vehi1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(iniciar2)
                        .addGap(18, 18, 18)
                        .addComponent(recargar2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(vehi2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(final2)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(nombre2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inicio2)
                        .addGap(18, 18, 18)))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(iniciar3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(nombre3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inicio3))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(recargar3)
                                .addGap(34, 34, 34)
                                .addComponent(final3))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(vehi3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Inicio de Viajes", jPanel3);

        jPanel4.setBackground(new java.awt.Color(208, 228, 255));

        jButton6.setText("actualizar y serializar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        tablafinal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tablafinal);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );

        jTabbedPane1.addTab("historial", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        eliminarruta();
        leerarchivo();
        jButton5.setEnabled(true);
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
     Editardist log1= new Editardist();
     log1.setVisible(true);
     
     
     
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
       if (contador !=3) {
   
        jButton3.setEnabled(true);
        
       } else   {jButton3.setEnabled(false);}
        

        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (cont==0) {
             paradatos e = new paradatos();
            e.setVisible(true);
            cont++;
            
        }else if (cont !=0) {
        }
        
     
        
        
        
        
        rutasinic();

switch(main.Main.vehiculo.size()){
    case 1 -> {
        nombre1.setText("<html>Vehiculo:<p>"+main.Main.vehiculo.get(0).getNombre());
        jLabel5.setText("<html>Distancia total:<p>"+main.Main.vehiculo.get(0).getDistanciatotal()+" KM");
        inicio1.setText("Inicio: "+main.Main.vehiculo.get(0).getInicio());
        final1.setText( "Final: "+main.Main.vehiculo.get(0).getFin());
        
            }
    case 2 -> {
        nombre1.setText("<html>Vehiculo:<p>"+main.Main.vehiculo.get(0).getNombre());
        jLabel5.setText("<html>Distancia total:<p>"+main.Main.vehiculo.get(0).getDistanciatotal()+" KM");
        inicio1.setText("Inicio: "+main.Main.vehiculo.get(0).getInicio());
        final1.setText( "Final: "+main.Main.vehiculo.get(0).getFin());
        
        nombre2.setText("<html>Vehiculo:<p>"+main.Main.vehiculo.get(1).getNombre());
        jLabel6.setText("<html>Distancia total:<p>"+main.Main.vehiculo.get(1).getDistanciatotal()+"KM");
        inicio2.setText("Inicio: "+main.Main.vehiculo.get(1).getInicio());
        final2.setText( "Final: "+main.Main.vehiculo.get(1).getFin());
            }
    case 3 -> {
        nombre1.setText("<html>Vehiculo:<p>"+main.Main.vehiculo.get(0).getNombre());
        jLabel5.setText("<html>Distancia total:<p>"+main.Main.vehiculo.get(0).getDistanciatotal()+" KM");
        inicio1.setText("Inicio: "+main.Main.vehiculo.get(0).getInicio());
        final1.setText( "Final: "+main.Main.vehiculo.get(0).getFin());
        
        nombre2.setText("<html>Vehiculo:<p>"+main.Main.vehiculo.get(1).getNombre());
        jLabel6.setText("<html>Distancia total:<p>"+main.Main.vehiculo.get(1).getDistanciatotal()+" KM");
        inicio2.setText("Inicio: "+main.Main.vehiculo.get(1).getInicio());
        final2.setText( "Final: "+main.Main.vehiculo.get(1).getFin());
        
        nombre3.setText("<html>Vehiculo:<p>"+main.Main.vehiculo.get(2).getNombre());
        jLabel7.setText("<html>Distancia total:<p>"+main.Main.vehiculo.get(2).getDistanciatotal()+" KM");
        inicio3.setText("Inicio:          "+main.Main.vehiculo.get(2).getInicio());
        final3.setText( "Final: "+main.Main.vehiculo.get(2).getFin());
            }
    
    
    
    default -> {
            }
}



        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

llenartabla();


// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
 jComboBox2.removeAllItems(); 
  jComboBox3.removeAllItems();
  jComboBox1.removeAllItems();
        llenarcombo1();
        llenarcombo2();
        llenarcombo3();
jButton5.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void iniciar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciar2ActionPerformed
        int v2=1;
        
        
         LocalDateTime fechai2= LocalDateTime.now();
    int año = fechai2.getYear();
    int mes = fechai2.getMonthValue();
    int dia = fechai2.getDayOfMonth();
    int hora = fechai2.getHour();
    int minutos = fechai2.getMinute();
    int segundos = fechai2.getSecond();
    
    String fechai22= Integer.toString(año)+"-"+Integer.toString(mes)+"-"+Integer.toString(dia)+"  " +Integer.toString(hora)+":"+Integer.toString(minutos)+":"+Integer.toString(segundos);
    
    rutaelegida dos = new rutaelegida(main.Main.vehiculo.get(1).getId(),fechai22,"",main.Main.vehiculo.get(1).getDistanciatotal(),main.Main.vehiculo.get(1).getNombre(),0.00);
   
    main.Main.rutalista(dos);
    cont23=cont23+1;
    llenartablafinal();
        
        if (main.Main.vehiculo.get(v2).getNombre() == moto1  || main.Main.vehiculo.get(v2).getNombre() == moto2 || main.Main.vehiculo.get(v2).getNombre() == moto3) {
            
            System.out.println(main.Main.vehiculo.get(v2).getNombre());
            double limiteimg2 = this.getWidth() - 2.5*vehi2.getWidth();
            movimiento m2= new movimiento(vehi2,limiteimg2,v2,paradatos.datos2); 
            
            m2.start();
            iniciar2.setEnabled(false);
            
            //posicion de la lista 0 1 2
            //limiteimg || 2 3
            //vehi 1 2 3
            // nombre de movimiento m1 m2 m3
            // iniciar 1  2  3
            
        } else if (main.Main.vehiculo.get(v2).getNombre() == estandar1  || main.Main.vehiculo.get(v2).getNombre() == estandar2 || main.Main.vehiculo.get(v2).getNombre() == estandar3) {
            
            System.out.println(main.Main.vehiculo.get(v2).getNombre());
            double limiteimg2 = this.getWidth() - 2.5*vehi2.getWidth();
            movimiento m2= new movimiento(vehi2,limiteimg2,v2,paradatos.datos2); 
            
            m2.start();
            iniciar2.setEnabled(false);
            
            //posicion de la lista 0 1 2
            //limiteimg || 2 3
            //vehi 1 2 3
            // nombre de movimiento m1 m2 m3
            // iniciar 1  2  3
            
        } else if (main.Main.vehiculo.get(v2).getNombre() == premium1  || main.Main.vehiculo.get(v2).getNombre() == premium2 || main.Main.vehiculo.get(v2).getNombre() == premium3) {
            
            System.out.println(main.Main.vehiculo.get(v2).getNombre());
            double limiteimg2 = this.getWidth() - 2.5*vehi2.getWidth();
            movimiento m2= new movimiento(vehi2,limiteimg2,v2,paradatos.datos2); 
            
            m2.start();
            iniciar2.setEnabled(false);
            
            //posicion de la lista 0 1 2
            //limiteimg || 2 3
            //vehi 1 2 3
            // nombre de movimiento m1 m2 m3
            // iniciar 1  2  3
            
        }
// TODO add your handling code here:
    }//GEN-LAST:event_iniciar2ActionPerformed

    private void iniciartodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciartodosActionPerformed
iniciar1.doClick();iniciar2.doClick();iniciar3.doClick();




        // TODO add your handling code here:
    }//GEN-LAST:event_iniciartodosActionPerformed

    private void iniciar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciar1ActionPerformed

        int v1=0;
        
        LocalDateTime fechai1= LocalDateTime.now();
    int año = fechai1.getYear();
    int mes = fechai1.getMonthValue();
    int dia = fechai1.getDayOfMonth();
    int hora = fechai1.getHour();
    int minutos = fechai1.getMinute();
    int segundos = fechai1.getSecond();
    
    String fechai11= Integer.toString(año)+"-"+Integer.toString(mes)+"-"+Integer.toString(dia)+"  " +Integer.toString(hora)+":"+Integer.toString(minutos)+":"+Integer.toString(segundos);
    
    
    
    rutaelegida uno = new rutaelegida(main.Main.vehiculo.get(0).getId(),fechai11,"",main.Main.vehiculo.get(0).getDistanciatotal(),main.Main.vehiculo.get(0).getNombre(),0.00);
   
    main.Main.rutalista(uno);
    cont23=cont23+1;
    
    llenartablafinal();
        if (main.Main.vehiculo.get(v1).getNombre() == moto1  || main.Main.vehiculo.get(v1).getNombre() == moto2 || main.Main.vehiculo.get(v1).getNombre() == moto3) {
            
            System.out.println(main.Main.vehiculo.get(v1).getNombre());
            double limiteimg = this.getWidth() - 2.8*vehi1.getWidth();
            movimiento m1= new movimiento(vehi1,limiteimg,v1,paradatos.datos1); 
            m1.start();
            iniciar1.setEnabled(false);
            
            
            //posicion de la lista 0 1 2
            //limiteimg || 2 3
            //vehi 1 2 3
            // nombre de movimiento m1 m2 m3
            // iniciar 1  2  3
            
            
        } else if (main.Main.vehiculo.get(v1).getNombre() == estandar1  || main.Main.vehiculo.get(v1).getNombre() == estandar2 || main.Main.vehiculo.get(v1).getNombre() == estandar3) {
            
            System.out.println(main.Main.vehiculo.get(v1).getNombre());
            double limiteimg = this.getWidth() - 2.8*vehi1.getWidth();
            movimiento m1= new movimiento(vehi1,limiteimg,v1,paradatos.datos1); 
            m1.start();
            iniciar1.setEnabled(false);
            
            
            //posicion de la lista 0 1 2
            //limiteimg || 2 3
            //vehi 1 2 3
            // nombre de movimiento m1 m2 m3
            // iniciar 1  2  3
            
            
        }else if (main.Main.vehiculo.get(v1).getNombre() == premium1  || main.Main.vehiculo.get(v1).getNombre() == premium2 || main.Main.vehiculo.get(v1).getNombre() == premium3) {
            
            System.out.println(main.Main.vehiculo.get(v1).getNombre());
            double limiteimg = this.getWidth() - 2.8*vehi1.getWidth();
            movimiento m1= new movimiento(vehi1,limiteimg,v1,paradatos.datos1); 
            m1.start();
            iniciar1.setEnabled(false);
            
            
            //posicion de la lista 0 1 2
            //limiteimg || 2 3
            //vehi 1 2 3
            // nombre de movimiento m1 m2 m3
            // iniciar 1  2  3
            
            
        }
        
        


        // TODO add your handling code here:
    }//GEN-LAST:event_iniciar1ActionPerformed

    private void iniciar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciar3ActionPerformed
    int v3=2;
    
            
LocalDateTime fechai3= LocalDateTime.now();
    int año = fechai3.getYear();
    int mes = fechai3.getMonthValue();
    int dia = fechai3.getDayOfMonth();
    int hora = fechai3.getHour();
    int minutos = fechai3.getMinute();
    int segundos = fechai3.getSecond();
    
    String fechai33= Integer.toString(año)+"-"+Integer.toString(mes)+"-"+Integer.toString(dia)+"  " +Integer.toString(hora)+":"+Integer.toString(minutos)+":"+Integer.toString(segundos);
    
       rutaelegida tres = new rutaelegida(main.Main.vehiculo.get(2).getId(),fechai33,"",main.Main.vehiculo.get(2).getDistanciatotal(),main.Main.vehiculo.get(2).getNombre(),0.00);
   
    main.Main.rutalista(tres);
    cont23=cont23+1;
    llenartablafinal();
    
    if (main.Main.vehiculo.get(v3).getNombre() == moto1  || main.Main.vehiculo.get(v3).getNombre() == moto2 || main.Main.vehiculo.get(v3).getNombre() == moto3) {
            
            System.out.println(main.Main.vehiculo.get(v3).getNombre());
            double limiteimg3 = this.getWidth() - 2.55*vehi3.getWidth();
            movimiento m3= new movimiento(vehi3,limiteimg3,v3,paradatos.datos3); 
            m3.start();
            
            iniciar3.setEnabled(false);
            
            //posicion de la lista 0 1 2
            //limiteimg || 2 3
            //vehi 1 2 3
            // nombre de movimiento m1 m2 m3 ******************
            // iniciar 1  2  3
            
        }else if (main.Main.vehiculo.get(v3).getNombre() == estandar1  || main.Main.vehiculo.get(v3).getNombre() == estandar2 || main.Main.vehiculo.get(v3).getNombre() == estandar3) {
            
            System.out.println(main.Main.vehiculo.get(v3).getNombre());
            double limiteimg3 = this.getWidth() - 2.55*vehi3.getWidth();
            movimiento m3= new movimiento(vehi3,limiteimg3,v3,paradatos.datos3); 
            m3.start();
            
            iniciar3.setEnabled(false);
            
            //posicion de la lista 0 1 2
            //limiteimg || 2 3
            //vehi 1 2 3
            // nombre de movimiento m1 m2 m3 ******************
            // iniciar 1  2  3
            
        }else if (main.Main.vehiculo.get(v3).getNombre() == premium1  || main.Main.vehiculo.get(v3).getNombre() == premium2 || main.Main.vehiculo.get(v3).getNombre() == premium3) {
            
            System.out.println(main.Main.vehiculo.get(v3).getNombre());
            double limiteimg3 = this.getWidth() - 2.55*vehi3.getWidth();
            movimiento m3= new movimiento(vehi3,limiteimg3,v3,paradatos.datos3); 
            m3.start();
            
            iniciar3.setEnabled(false);
            
            //posicion de la lista 0 1 2
            //limiteimg || 2 3
            //vehi 1 2 3
            // nombre de movimiento m1 m2 m3 ******************
            // iniciar 1  2  3
            
        }
    
    
// TODO add your handling code here:
    }//GEN-LAST:event_iniciar3ActionPerformed

    private void recargar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recargar1ActionPerformed
        int r1=0;
        
        if (main.Main.vehiculo.get(r1).getNombre() == moto1  || main.Main.vehiculo.get(r1).getNombre() == moto2 || main.Main.vehiculo.get(r1).getNombre() == moto3) {
            
        double limiteimg = this.getWidth() - 2.8*vehi1.getWidth();
        movimiento m1= new movimiento(vehi1,limiteimg,r1,paradatos.datos1);
        
        main.Main.vehiculo.get(r1).setCapacidad(6);
        System.out.println("nueva capacidadeeeee" + main.Main.vehiculo.get(r1).getCapacidad());
        m1.reanudar();   

        
        
        
        }else if (main.Main.vehiculo.get(r1).getNombre() == estandar1  || main.Main.vehiculo.get(r1).getNombre() == estandar2 || main.Main.vehiculo.get(r1).getNombre() == estandar3) {
            
        double limiteimg = this.getWidth() - 2.8*vehi1.getWidth();
        movimiento m1= new movimiento(vehi1,limiteimg,r1,paradatos.datos1);
        
        main.Main.vehiculo.get(r1).setCapacidad(10);
        System.out.println("nueva capacidadeeeee" + main.Main.vehiculo.get(r1).getCapacidad());
        m1.reanudar();   

        
        
        
        } else if (main.Main.vehiculo.get(r1).getNombre() == premium1  || main.Main.vehiculo.get(r1).getNombre() == premium2 || main.Main.vehiculo.get(r1).getNombre() == premium3) {
            
        double limiteimg = this.getWidth() - 2.8*vehi1.getWidth();
        movimiento m1= new movimiento(vehi1,limiteimg,r1,paradatos.datos1);
        
        main.Main.vehiculo.get(r1).setCapacidad(12);
        System.out.println("nueva capacidadeeeee" + main.Main.vehiculo.get(r1).getCapacidad());
        m1.reanudar();   

        }


        // TODO add your handling code here:
    }//GEN-LAST:event_recargar1ActionPerformed

    private void recargar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recargar2ActionPerformed
        int r2=1;
        
        if (main.Main.vehiculo.get(r2).getNombre() == moto1  || main.Main.vehiculo.get(r2).getNombre() == moto2 || main.Main.vehiculo.get(r2).getNombre() == moto3) {
            
        double limiteimg2 = this.getWidth() - 2.8*vehi2.getWidth();
        movimiento m2= new movimiento(vehi2,limiteimg2,r2,paradatos.datos2);
        
        main.Main.vehiculo.get(r2).setCapacidad(6);
        System.out.println("nueva capacidadeeeee" + main.Main.vehiculo.get(r2).getCapacidad());
        m2.reanudar();   

        
        
        
        } else if (main.Main.vehiculo.get(r2).getNombre() == estandar1  || main.Main.vehiculo.get(r2).getNombre() == estandar2 || main.Main.vehiculo.get(r2).getNombre() == estandar3) {
            
        double limiteimg2 = this.getWidth() - 2.8*vehi2.getWidth();
        movimiento m2= new movimiento(vehi2,limiteimg2,r2,paradatos.datos2);
        
        main.Main.vehiculo.get(r2).setCapacidad(10);
        System.out.println("nueva capacidadeeeee" + main.Main.vehiculo.get(r2).getCapacidad());
        m2.reanudar();   

        
        
        
        } else if (main.Main.vehiculo.get(r2).getNombre() == premium1  || main.Main.vehiculo.get(r2).getNombre() == premium2 || main.Main.vehiculo.get(r2).getNombre() == premium3) {
            
        double limiteimg2 = this.getWidth() - 2.8*vehi2.getWidth();
        movimiento m2= new movimiento(vehi2,limiteimg2,r2,paradatos.datos2);
        
        main.Main.vehiculo.get(r2).setCapacidad(12);
        System.out.println("nueva capacidadeeeee" + main.Main.vehiculo.get(r2).getCapacidad());
        m2.reanudar();   

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_recargar2ActionPerformed

    private void recargar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recargar3ActionPerformed
       int r3=2;
        
        if (main.Main.vehiculo.get(r3).getNombre() == moto1  || main.Main.vehiculo.get(r3).getNombre() == moto2 || main.Main.vehiculo.get(r3).getNombre() == moto3) {
            
        double limiteimg3 = this.getWidth() - 2.8*vehi3.getWidth();
        movimiento m3= new movimiento(vehi3,limiteimg3,r3,paradatos.datos3);
        
        main.Main.vehiculo.get(r3).setCapacidad(6);
        System.out.println("nueva capacidadeeeee" + main.Main.vehiculo.get(r3).getCapacidad());
        m3.reanudar();   

        
        
        
        }else if (main.Main.vehiculo.get(r3).getNombre() == estandar1  || main.Main.vehiculo.get(r3).getNombre() == estandar2 || main.Main.vehiculo.get(r3).getNombre() == estandar3) {
            
        double limiteimg3 = this.getWidth() - 2.8*vehi3.getWidth();
        movimiento m3= new movimiento(vehi3,limiteimg3,r3,paradatos.datos3);
        
        main.Main.vehiculo.get(r3).setCapacidad(10);
        System.out.println("nueva capacidadeeeee" + main.Main.vehiculo.get(r3).getCapacidad());
        m3.reanudar();   

        
        
        
        }else if (main.Main.vehiculo.get(r3).getNombre() == premium1  || main.Main.vehiculo.get(r3).getNombre() == premium2 || main.Main.vehiculo.get(r3).getNombre() == premium3) {
            
        double limiteimg3 = this.getWidth() - 2.8*vehi3.getWidth();
        movimiento m3= new movimiento(vehi3,limiteimg3,r3,paradatos.datos3);
        
        main.Main.vehiculo.get(r3).setCapacidad(12);
        System.out.println("nueva capacidadeeeee" + main.Main.vehiculo.get(r3).getCapacidad());
        m3.reanudar();   

        }
        
        

// TODO add your handling code here:
    }//GEN-LAST:event_recargar3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
main.Main.serializart2();       
llenartablafinal();

       
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cargaruta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cargaruta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cargaruta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cargaruta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cargaruta().setVisible(true);
            }
        });
    }
    
    
    //metodo para manejo de archivos
    public void leerarchivo(){
    File archivo = null;
    FileReader lector = null;
    BufferedReader bufferedlector = null;
    
    try{
    //jfilechooser (elegir un archivo)
    JFileChooser selector = new JFileChooser();
    int confirmacion = selector.showOpenDialog(this);
    if(confirmacion == JFileChooser.APPROVE_OPTION){
        System.out.println(selector.getSelectedFile());
        archivo=selector.getSelectedFile();
    }
    
    //leerarchivo 
     lector = new FileReader (archivo);
     bufferedlector = new BufferedReader(lector);
     
     // obtener los datos
     String linea;
     String Contenido = "";
     int contador =0;
     
     while((linea = bufferedlector.readLine()) !=null){
         if (contador!=0) {
         String[] fila_dato= linea.split(",");
         System.out.println(fila_dato[0]+" "+fila_dato[1]+" "+fila_dato[2]);
         int dist=Integer.parseInt(fila_dato[2]);
         rutas nueva_ruta= new rutas(main.Main.ids,fila_dato[0],fila_dato[1],dist);
         main.Main.añadirruta(nueva_ruta);
             System.out.println("ruta añadida");
             System.out.println("tamaño: " + listarutas.size()+"\n");
             
             llenartabla();
             
         }
         contador++;

     }
    
    
    
    
        
        }catch(Exception e){
    e.printStackTrace();
    JOptionPane.showMessageDialog(this,"Carga un archivo, o un archivo valido");
    }finally{
       try{
           if (lector!=null) {
               lector.close(); 
                                  }
           }catch(Exception e2){
           e2.printStackTrace();
            }
            }
                            }
 //fin metodo para manejo de archivos


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel final1;
    private javax.swing.JLabel final2;
    private javax.swing.JLabel final3;
    private javax.swing.JButton iniciar1;
    private javax.swing.JButton iniciar2;
    private javax.swing.JButton iniciar3;
    private javax.swing.JButton iniciartodos;
    private javax.swing.JLabel inicio1;
    private javax.swing.JLabel inicio2;
    private javax.swing.JLabel inicio3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel nombre1;
    private javax.swing.JLabel nombre2;
    private javax.swing.JLabel nombre3;
    private javax.swing.JButton recargar1;
    private javax.swing.JButton recargar2;
    private javax.swing.JButton recargar3;
    private javax.swing.JTable tablafinal;
    private javax.swing.JLabel vehi1;
    private javax.swing.JLabel vehi2;
    private javax.swing.JLabel vehi3;
    // End of variables declaration//GEN-END:variables

    public void llenartabla() {
    
        
        DefaultTableModel t1 = new DefaultTableModel(new String[]{"id","inicio","fin","distancia"},listarutas.size());
        jTable1.setModel(t1);
        TableModel t2 = jTable1.getModel();
        

        
        for (int i = 0; i < listarutas.size(); i++) {
            
            rutas llenado = listarutas.get(i);
            t2.setValueAt(llenado.getId(), i, 0);
            t2.setValueAt(llenado.getInicio(), i, 1);
            t2.setValueAt(llenado.getFin(), i, 2);
            t2.setValueAt(llenado.getDistancia(), i, 3);
                                                     }
       
        
        
    }
    
    public void llenartablafinal() {
    
        
        DefaultTableModel t3 = new DefaultTableModel(new String[]{"id","inicio","fin","distancia","vehiculo","gasolina gastada"},listarutas.size());
        tablafinal.setModel(t3);
        TableModel t4 = tablafinal.getModel();
       
        for (int i = 0; i < main.Main.rutaelegidalist.size(); i++) {
            // clase a secas                  linkedlist de main
            rutaelegida llenado2 = main.Main.rutaelegidalist.get(i);
            t4.setValueAt(llenado2.getId(), i, 0);
            t4.setValueAt(llenado2.getInicio(), i, 1);
            t4.setValueAt(llenado2.getFin(), i, 2);
            t4.setValueAt(llenado2.getDistancia(), i, 3);
            t4.setValueAt(llenado2.getVehiculo(), i, 4);
            t4.setValueAt(llenado2.getGasol(), i, 5);
                                                     }
       
        
        
    }
    
    
    
    public void llenarcombo1(){
        for (int i = 0; i < listarutas.size(); i++) {
         jComboBox2.addItem(listarutas.get(i).getInicio());
         jComboBox2.addItem(listarutas.get(i).getFin());
          
        }
    
    }
    
        public void llenarcombo2(){
        for (int i = 0; i < listarutas.size(); i++) {
         jComboBox3.addItem(listarutas.get(i).getFin());
         jComboBox3.addItem(listarutas.get(i).getInicio());
          
        }
    
    }
        
        public void llenarcombo3(){
         
         jComboBox1.addItem(moto1);
         jComboBox1.addItem(moto2);
         jComboBox1.addItem(moto3);
         jComboBox1.addItem(estandar1);
         jComboBox1.addItem(estandar2);
         jComboBox1.addItem(estandar3);
         jComboBox1.addItem(premium1);
         jComboBox1.addItem(premium2);
         jComboBox1.addItem(premium3);
         
          
        
    
    }
        
        
        
        int contador =0;
        int cont=0;
        public static int cont23=-1+main.Main.rutaelegidalist.size();
        
    //añadir rutas a la linkedlist rutas    
    public void rutasinic(){
        
        
    
            
        
        
        if (jComboBox1.getSelectedItem() == moto1) {
            for (int i = 0; i < listarutas.size(); i++) {
                
                if (((jComboBox2.getSelectedItem()== listarutas.get(i).getFin() || jComboBox2.getSelectedItem()== listarutas.get(i).getInicio()) && (jComboBox3.getSelectedItem()== listarutas.get(i).getFin() || jComboBox3.getSelectedItem()== listarutas.get(i).getInicio())&& (jComboBox2.getSelectedItem()!= jComboBox3.getSelectedItem()) )) {
                  vehiculo veh = new vehiculo(listarutas.get(i).getId(),0.1,6.0,moto1,listarutas.get(i).getDistancia(),0,String.valueOf(jComboBox2.getSelectedItem()),String.valueOf(jComboBox3.getSelectedItem()));
                  main.Main.avehiculo(veh);
                  jComboBox1.removeItem(moto1);
                  contador++;
                    System.out.println("rutas agregadas: "+contador + "  tamaño linkedlist: "+main.Main.vehiculo.size());
                    
                    System.out.println("generada la ruta de moto1 con distancia de 1\n\n"+
                                       "inicio "+veh.getInicio()+"\n"+
                                       "fin "+veh.getFin()+"\n"+ 
                                       "id "+veh.getId()+"\n"+
                                       "consumo "+veh.getConsumo()+"\n"+
                                       "capacidad "+veh.getCapacidad()+"\n"+
                                       "nombre "+veh.getNombre()+"\n"+
                                       "distotal "+veh.getDistanciatotal()+"\n"+
                                        "disactual "+veh.getDistanciaactual()+"\n"+
                                       "inicio "+veh.getInicio()+"\n"+
                                       "fin "+veh.getFin()+"\n"
                            
                    
                    );
                    if (contador==1) {
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/moto.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi1.setIcon(render1);
                        
                    }else if (contador==2) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/moto.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi2.setIcon(render1);   
                    }else if (contador==3) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/moto.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi3.setIcon(render1);   
                    }
    
                    
                }
            
                
            }
            
            
            
        }else if (jComboBox1.getSelectedItem() == moto2) {
            for (int i = 0; i < listarutas.size(); i++) {
                
                if ((jComboBox2.getSelectedItem()== listarutas.get(i).getFin() || jComboBox2.getSelectedItem()== listarutas.get(i).getInicio()) && (jComboBox3.getSelectedItem()== listarutas.get(i).getFin() || jComboBox3.getSelectedItem()== listarutas.get(i).getInicio()) ) {
                  vehiculo veh2 = new vehiculo(listarutas.get(i).getId(),0.1,6.0,moto2,listarutas.get(i).getDistancia(),0,String.valueOf(jComboBox2.getSelectedItem()),String.valueOf(jComboBox3.getSelectedItem()));
                  main.Main.avehiculo(veh2);
                  jComboBox1.removeItem(moto2);
                  contador++;
                    System.out.println("rutas agregadas: "+contador + "  tamaño linkedlist: "+main.Main.vehiculo.size());
                    
                    System.out.println("generada la ruta de moto2 con distancia de 1\n\n"+
                                        "id "+veh2.getId()+"\n"+
                                        "consumo "+veh2.getConsumo()+"\n"+
                                       "capacidad "+veh2.getCapacidad()+"\n"+
                                       "nombre "+veh2.getNombre()+"\n"+
                                       "distotal "+veh2.getDistanciatotal()+"\n"+
                                        "disactual "+veh2.getDistanciaactual()+"\n"+
                                       "inicio "+veh2.getInicio()+"\n"+
                                       "fin "+veh2.getFin()+"\n"
                    
                    );
                    if (contador==1) {
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/moto.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi1.setIcon(render1);
                        
                    }else if (contador==2) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/moto.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi2.setIcon(render1);   
                    }else if (contador==3) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/moto.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi3.setIcon(render1);   
                    }

                    
                    
                }    
            }
            }
        else if (jComboBox1.getSelectedItem() == moto3) {
            for (int i = 0; i < listarutas.size(); i++) {
                
                if ((jComboBox2.getSelectedItem()== listarutas.get(i).getFin() || jComboBox2.getSelectedItem()== listarutas.get(i).getInicio()) && (jComboBox3.getSelectedItem()== listarutas.get(i).getFin() || jComboBox3.getSelectedItem()== listarutas.get(i).getInicio()) ) {
                  vehiculo veh3 = new vehiculo(listarutas.get(i).getId(),0.1,6.0,moto3,listarutas.get(i).getDistancia(),0,String.valueOf(jComboBox2.getSelectedItem()),String.valueOf(jComboBox3.getSelectedItem()));
                  main.Main.avehiculo(veh3);
                  jComboBox1.removeItem(moto3);
                  contador++;
                    System.out.println("rutas agregadas: "+contador + "  tamaño linkedlist: "+main.Main.vehiculo.size());
                    
                    System.out.println("generada la ruta de moto3 con distancia de 1\n\n"+
                                        "id "+veh3.getId()+"\n"+
                                        "consumo "+veh3.getConsumo()+"\n"+
                                       "capacidad "+veh3.getCapacidad()+"\n"+
                                       "nombre "+veh3.getNombre()+"\n"+
                                       "distotal "+veh3.getDistanciatotal()+"\n"+
                                        "disactual "+veh3.getDistanciaactual()+"\n"+
                                       "inicio "+veh3.getInicio()+"\n"+
                                       "fin "+veh3.getFin()+"\n"
                    
                    );
                    if (contador==1) {
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/moto.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi1.setIcon(render1);
                        
                    }else if (contador==2) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/moto.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi2.setIcon(render1);   
                    }else if (contador==3) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/moto.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(58, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi3.setIcon(render1);   
                    }

                    
                    
                }
            }
        }
        else if (jComboBox1.getSelectedItem() == estandar1) {
            for (int i = 0; i < listarutas.size(); i++) {
                
                if ((jComboBox2.getSelectedItem()== listarutas.get(i).getFin() || jComboBox2.getSelectedItem()== listarutas.get(i).getInicio()) && (jComboBox3.getSelectedItem()== listarutas.get(i).getFin() || jComboBox3.getSelectedItem()== listarutas.get(i).getInicio()) ) {
                  vehiculo veh4 = new vehiculo(listarutas.get(i).getId(),0.3,10.0,estandar1,listarutas.get(i).getDistancia(),0,String.valueOf(jComboBox2.getSelectedItem()),String.valueOf(jComboBox3.getSelectedItem()));
                  main.Main.avehiculo(veh4);
                  jComboBox1.removeItem(estandar1);
                  contador++;
                    System.out.println("rutas agregadas: "+contador + "  tamaño linkedlist: "+main.Main.vehiculo.size());
                    
                    System.out.println("generada la ruta de estandar1 con distancia de 1\n\n"+
                                        "id "+veh4.getId()+"\n"+
                                        "consumo "+veh4.getConsumo()+"\n"+
                                       "capacidad "+veh4.getCapacidad()+"\n"+
                                       "nombre "+veh4.getNombre()+"\n"+
                                       "distotal "+veh4.getDistanciatotal()+"\n"+
                                        "disactual "+veh4.getDistanciaactual()+"\n"+
                                       "inicio "+veh4.getInicio()+"\n"+
                                       "fin "+veh4.getFin()+"\n"
                    
                    );
                    if (contador==1) {
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/estandar.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi1.setIcon(render1);
                        
                    }else if (contador==2) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/estandar.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi2.setIcon(render1);   
                    }else if (contador==3) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/estandar.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi3.setIcon(render1);   
                    }

                    
                    
                }
            }
        }
        
        else if (jComboBox1.getSelectedItem() == estandar2) {
            for (int i = 0; i < listarutas.size(); i++) {
                
                if ((jComboBox2.getSelectedItem()== listarutas.get(i).getFin() || jComboBox2.getSelectedItem()== listarutas.get(i).getInicio()) && (jComboBox3.getSelectedItem()== listarutas.get(i).getFin() || jComboBox3.getSelectedItem()== listarutas.get(i).getInicio()) ) {
                  vehiculo veh5 = new vehiculo(listarutas.get(i).getId(),0.3,10.0,estandar2,listarutas.get(i).getDistancia(),0,String.valueOf(jComboBox2.getSelectedItem()),String.valueOf(jComboBox3.getSelectedItem()));
                  main.Main.avehiculo(veh5);
                  jComboBox1.removeItem(estandar2);
                  contador++;
                    System.out.println("rutas agregadas: "+contador + "  tamaño linkedlist: "+main.Main.vehiculo.size());
                    
                    System.out.println("generada la ruta de estandar2 con distancia de 1\n\n"+
                                        "id "+veh5.getId()+"\n"+
                                        "consumo "+veh5.getConsumo()+"\n"+
                                       "capacidad "+veh5.getCapacidad()+"\n"+
                                       "nombre "+veh5.getNombre()+"\n"+
                                       "distotal "+veh5.getDistanciatotal()+"\n"+
                                        "disactual "+veh5.getDistanciaactual()+"\n"+
                                       "inicio "+veh5.getInicio()+"\n"+
                                       "fin "+veh5.getFin()+"\n"
                    
                    );
                    if (contador==1) {
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/estandar.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi1.setIcon(render1);
                        
                    }else if (contador==2) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/estandar.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi2.setIcon(render1);   
                    }else if (contador==3) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/estandar.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi3.setIcon(render1);   
                    }

                    
                    
                }
            }
        }
        
        else if (jComboBox1.getSelectedItem() == estandar3) {
            for (int i = 0; i < listarutas.size(); i++) {
                
                if ((jComboBox2.getSelectedItem()== listarutas.get(i).getFin() || jComboBox2.getSelectedItem()== listarutas.get(i).getInicio()) && (jComboBox3.getSelectedItem()== listarutas.get(i).getFin() || jComboBox3.getSelectedItem()== listarutas.get(i).getInicio()) ) {
                  vehiculo veh6 = new vehiculo(listarutas.get(i).getId(),0.3,10.0,estandar3,listarutas.get(i).getDistancia(),0,String.valueOf(jComboBox2.getSelectedItem()),String.valueOf(jComboBox3.getSelectedItem()));
                  main.Main.avehiculo(veh6);
                  jComboBox1.removeItem(estandar3);
                  contador++;
                    System.out.println("rutas agregadas: "+contador + "  tamaño linkedlist: "+main.Main.vehiculo.size());
                    
                    System.out.println("generada la ruta de estandar3 con distancia de 1\n\n"+
                                        "id "+veh6.getId()+"\n"+
                                        "consumo "+veh6.getConsumo()+"\n"+
                                       "capacidad "+veh6.getCapacidad()+"\n"+
                                       "nombre "+veh6.getNombre()+"\n"+
                                       "distotal "+veh6.getDistanciatotal()+"\n"+
                                        "disactual "+veh6.getDistanciaactual()+"\n"+
                                       "inicio "+veh6.getInicio()+"\n"+
                                       "fin "+veh6.getFin()+"\n"
                    
                    );
                    if (contador==1) {
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/estandar.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi1.setIcon(render1);
                        
                    }else if (contador==2) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/estandar.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi2.setIcon(render1);   
                    }else if (contador==3) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/estandar.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi3.setIcon(render1);   
                    }

                    
                    
                }
            }
        }
        
        else if (jComboBox1.getSelectedItem() == premium1) {
            for (int i = 0; i < listarutas.size(); i++) {
                
                if ((jComboBox2.getSelectedItem()== listarutas.get(i).getFin() || jComboBox2.getSelectedItem()== listarutas.get(i).getInicio()) && (jComboBox3.getSelectedItem()== listarutas.get(i).getFin() || jComboBox3.getSelectedItem()== listarutas.get(i).getInicio()) ) {
                  vehiculo veh7 = new vehiculo(listarutas.get(i).getId(),0.45,12.0,premium1,listarutas.get(i).getDistancia(),0,String.valueOf(jComboBox2.getSelectedItem()),String.valueOf(jComboBox3.getSelectedItem()));
                  main.Main.avehiculo(veh7);
                  jComboBox1.removeItem(premium1);
                  contador++;
                    System.out.println("rutas agregadas: "+contador + "  tamaño linkedlist: "+main.Main.vehiculo.size());
                    
                    System.out.println("generada la ruta de premium1 con distancia de 1\n\n"+
                                        "id "+veh7.getId()+"\n"+
                                        "consumo "+veh7.getConsumo()+"\n"+
                                       "capacidad "+veh7.getCapacidad()+"\n"+
                                       "nombre "+veh7.getNombre()+"\n"+
                                       "distotal "+veh7.getDistanciatotal()+"\n"+
                                        "disactual "+veh7.getDistanciaactual()+"\n"+
                                       "inicio "+veh7.getInicio()+"\n"+
                                       "fin "+veh7.getFin()+"\n"
                    
                    );
                    if (contador==1) {
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/premium.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi1.setIcon(render1);
                        
                    }else if (contador==2) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/premium.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi2.setIcon(render1);   
                    }else if (contador==3) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/premium.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi3.setIcon(render1);   
                    }
                    
                    
                }
            }
        }
        
        else if (jComboBox1.getSelectedItem() == premium2) {
            for (int i = 0; i < listarutas.size(); i++) {
                
                if ((jComboBox2.getSelectedItem()== listarutas.get(i).getFin() || jComboBox2.getSelectedItem()== listarutas.get(i).getInicio()) && (jComboBox3.getSelectedItem()== listarutas.get(i).getFin() || jComboBox3.getSelectedItem()== listarutas.get(i).getInicio()) ) {
                  vehiculo veh8 = new vehiculo(listarutas.get(i).getId(),0.45,12.0,premium2,listarutas.get(i).getDistancia(),0,String.valueOf(jComboBox2.getSelectedItem()),String.valueOf(jComboBox3.getSelectedItem()));
                  main.Main.avehiculo(veh8);
                  jComboBox1.removeItem(premium2);
                  contador++;
                    System.out.println("rutas agregadas: "+contador + "  tamaño linkedlist: "+main.Main.vehiculo.size());
                    
                    System.out.println("generada la ruta de premium2 con distancia de 1\n\n"+
                                        "id "+veh8.getId()+"\n"+
                                        "consumo "+veh8.getConsumo()+"\n"+
                                       "capacidad "+veh8.getCapacidad()+"\n"+
                                       "nombre "+veh8.getNombre()+"\n"+
                                       "distotal "+veh8.getDistanciatotal()+"\n"+
                                        "disactual "+veh8.getDistanciaactual()+"\n"+
                                       "inicio "+veh8.getInicio()+"\n"+
                                       "fin "+veh8.getFin()+"\n"
                    
                    );
                    if (contador==1) {
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/premium.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi1.setIcon(render1);
                        
                    }else if (contador==2) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/premium.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi2.setIcon(render1);   
                    }else if (contador==3) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/premium.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi3.setIcon(render1);   
                    }

                    
                    
                }
            }
        }
        
        else if (jComboBox1.getSelectedItem() == premium3) {
            for (int i = 0; i < listarutas.size(); i++) {
                
                if ((jComboBox2.getSelectedItem()== listarutas.get(i).getFin() || jComboBox2.getSelectedItem()== listarutas.get(i).getInicio()) && (jComboBox3.getSelectedItem()== listarutas.get(i).getFin() || jComboBox3.getSelectedItem()== listarutas.get(i).getInicio()) ) {
                  vehiculo veh9 = new vehiculo(listarutas.get(i).getId(),0.45,12.0,premium3,listarutas.get(i).getDistancia(),0,String.valueOf(jComboBox2.getSelectedItem()),String.valueOf(jComboBox3.getSelectedItem()));
                  main.Main.avehiculo(veh9);
                  jComboBox1.removeItem(premium3);
                  contador++;
                    System.out.println("rutas agregadas: "+contador + "  tamaño linkedlist: "+main.Main.vehiculo.size());
                    
                    System.out.println("generada la ruta de premium3 con distancia de 1\n\n"+
                                        "id "+veh9.getId()+"\n"+
                                        "consumo "+veh9.getConsumo()+"\n"+
                                       "capacidad "+veh9.getCapacidad()+"\n"+
                                       "nombre "+veh9.getNombre()+"\n"+
                                       "distotal "+veh9.getDistanciatotal()+"\n"+
                                        "disactual "+veh9.getDistanciaactual()+"\n"+
                                       "inicio "+veh9.getInicio()+"\n"+
                                       "fin "+veh9.getFin()+"\n"
                    
                    );
                    if (contador==1) {
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/premium.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi1.setIcon(render1);
                        
                    }else if (contador==2) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/premium.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi2.setIcon(render1);   
                    }else if (contador==3) {                      
                        ImageIcon motoi1 = new ImageIcon(getClass().getResource("../imagenes/premium.gif"));
                        Image moto1 = motoi1.getImage().getScaledInstance(68, 65, Image.SCALE_DEFAULT);
                        ImageIcon render1 = new ImageIcon(moto1);
                        vehi3.setIcon(render1);   
                    }

                    
                    
                }
            }
        }
   


        
        if (contador==3) {jButton3.setEnabled(false);
            
        }else{}

    }

    

    
   
}
